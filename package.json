{
  "scripts": {
    "lint": "pronto run",
    "eslint": "git diff --name-only --diff-filter=dx origin/master... | grep apps/site/assets/js/.*\\.js | xargs apps/site/assets/node_modules/.bin/eslint",
    "eslint:fix": "git diff --name-only --diff-filter=dx origin/master... | grep apps/site/assets/js/.*\\.js | xargs apps/site/assets/node_modules/.bin/eslint --fix",
    "format": "git diff --name-only --diff-filter=dx origin/master... | grep apps/site/assets/js/.*\\.js | xargs apps/site/assets/node_modules/.bin/prettier --write",
    "ci-install": "cd apps/site/assets && npm ci --no-optional",
    "install": "cd apps/site/assets && npm install --no-optional",
    "test": "mix test && npm run test:js && mix backstop.tests",
    "backstop:test": "cd apps/site/test && ../assets/node_modules/.bin/backstop test --docker",
    "backstop:reference": "cd apps/site/test && ../assets/node_modules/.bin/backstop reference --docker",
    "test:js": "cd apps/site/assets && npm run test",
    "brunch:build:namespaced": "cd apps/site/assets/namespaced_header_footer && npm run brunch:build",
    "brunch:build": "cd apps/site/assets && node_modules/brunch/bin/brunch b -p",
    "brunch:watch": "cd apps/site/assets && node_modules/brunch/bin/brunch w",
    "server:mocked": "USE_SERVER_SENT_EVENTS=false WIREMOCK_PROXY=true MIX_ENV=prod PORT=8082 STATIC_SCHEME=http STATIC_HOST=host.docker.internal STATIC_PORT=8082 V3_URL=http://localhost:8080 OPEN_TRIP_PLANNER_URL=http://localhost:8080 DRUPAL_ROOT=http://www.cms.example mix do deps.compile --force, compile --no-deps-check --force, phx.server",
    "server:mocked:nocompile": "WIREMOCK_PROXY=true MIX_ENV=prod PORT=8082 STATIC_SCHEME=http STATIC_HOST=host.docker.internal STATIC_PORT=8082 V3_URL=http://localhost:8080 OPEN_TRIP_PLANNER_URL=http://localhost:8080 DRUPAL_ROOT=http://www.cms.example mix phx.server",
    "wiremock": "cd apps/site && java -jar ${WIREMOCK_PATH:-../../bin/wiremock-standalone-2.14.0.jar} --root-dir=test --global-response-templating",
    "wiremock:record": "npm run wiremock -- --record-mappings",
    "wiremock:record:clean": "rm -fr apps/site/test/__files/*.json && rm -fr apps/site/test/mappings/mapping* && npm run wiremock:record",
    "routes": "cd apps/site && mix phx.routes && cd ../..",
    "dialyzer": "mix dialyzer --halt-exit-status"
  }
}
