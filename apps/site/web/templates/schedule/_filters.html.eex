<div class="row row-equal">
  <div class="col-xs-12 col-sm-6 col-equal">
    <%= render "_stop_selector.html",
        conn: @conn,
        query_key: "origin",
        selected: @origin || @from.id,
        all_stops: @all_stops,
        label_text: "Departure times from",
        change_text: "Change Departure",
        disabled_values: if @all_stops == [], do: [], else: [List.last(@all_stops).id] %>
  </div>
  <%= if @destination == nil do %>
    <%# need both to handle the margins correctly on the small screen but also have a full-height background on desktop %>
    <div class="hidden-xs-down col-equal hidden-no-js schedule-callout">
      To view a trip schedule, <button class="btn btn-link" data-select-modal-open="dest">select a destination</button>
    </div>
    <div class="col-xs-12 hidden-sm-up hidden-no-js">
      <div class="schedule-callout">
       To view a trip schedule, <button class="btn btn-link" data-select-modal-open="dest">select a destination</button>
      </div>
    </div>
  <% end %>
  <div class="col-xs-12 col-sm-6 col-equal<%= if @destination == nil do %> hidden-js<% end %>">
    <%= render "_stop_selector.html",
        conn: @conn,
        query_key: "dest",
        selected: @destination,
        all_stops: @all_stops,
        label_text: "Arriving at",
        change_text: "Change Arrival",
        include_empty?: true,
        include: %{"origin" => @origin || @from.id},
        exclude: ["direction_id"], # since the pairs view doesn't need a direction_id
        disabled_values: [@origin, @from.id] ++ Enum.filter(@all_stops, &(!Enum.member?(@destination_stops, &1)))
    %>
  </div>
</div>
<div class="row">
  <div class="col-xs-12">
    <%= Site.AlertView.inline @conn, alerts: stop_alerts_for(@alerts, [@origin, @destination], route: @route.id, route_type: @route.type, time: @datetime), time: @datetime %>
  </div>
</div>
