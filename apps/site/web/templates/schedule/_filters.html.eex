<div class="row row-equal">
  <div class="col-xs-12 col-sm-6 col-equal">
    <% label_text = if is_nil(@destination) do
        "Showing departure times from:"
        else
        "Departure times from:"
        end %>
    <%= render "_stop_selector.html",
        conn: @conn,
        query_key: "origin",
        selected: @origin || @from.id,
        all_stops: @all_stops,
        label_text: label_text,
        change_text: "Change Departure",
        disabled_values: @excluded_origin_stops |> Enum.map(&{&1, "last #{direction(@direction_id, @route.id) |> String.downcase} stop"}) %>
  </div>
  <%= if @destination == nil do %>
    <%# need both to handle the margins correctly on the small screen but also have a full-height background on desktop %>
    <div class="hidden-xs-down col-equal hidden-no-js schedule-callout text-xs-center">
      To view a trip schedule, <div><button class="btn btn-link" data-select-modal-open="dest">select a destination</button>.</div>
    </div>
    <div class="col-xs-12 hidden-sm-up hidden-no-js">
      <div class="schedule-callout text-xs-center">
       To view a trip schedule, <button class="btn btn-link" data-select-modal-open="dest">select a destination</button>.
      </div>
    </div>
  <% end %>
  <div class="col-xs-12 col-sm-6 col-equal<%= if @destination == nil do %> hidden-js<% end %>">
    <%= render "_stop_selector.html",
        conn: @conn,
        query_key: "dest",
        selected: @destination,
        all_stops: @all_stops,
        label_text: "Arriving at:",
        change_text: "Change Arrival",
        include_empty?: true,
        include: %{"origin" => @origin || @from.id},
        exclude: ["direction_id"], # since the pairs view doesn't need a direction_id
        disabled_values: [
          {@origin, "departure stop"},
          {@from.id, "departure stop"}] ++ (
            @excluded_destination_stops # filter out non-destination stops because they're on a different branch
            |> Enum.map(&({&1, "not on branch"})))
    %>
  </div>
</div>
