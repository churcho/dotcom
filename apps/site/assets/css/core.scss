@import 'variables';
@import 'bootstrap';
@import 'bootstrap-extra';
@import 'mixins';
@import 'lato';
@import 'footer';
@import 'header';
@import 'header-desktop-menu';
@import 'page';
@import 'headings';
@import 'vendor/font-awesome-4.6.3/scss/font-awesome';
@import 'social';
@import 'layout-core-shared';

html,
body {
  @include base-font-size();
}

html {
  height: 100%;
  position: relative;
}

body {
  align-items: stretch;
  background-color: $homepage-bg-color;
  display: flex;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  height: 100%;
  justify-content: center;
  min-width: 20rem;
  text-rendering: optimizeLegibility;

  // if display: flex is not reverted to display: block in print mode,
  // Firefox only renders content on the first page.
  // Must also be reverted on .body-wrapper as well.
  // more details: https://app.asana.com/0/395349163493257/434551553219078

  @media print {
    color: $black;
    display: block;
  }

  &.no-js {
    .collapse:target {
      display: block;
    };

    .hidden-no-js {
      display: none;
    }
  }

  &.js {
    .hidden-js {
      display: none;
    }

    .sr-or-no-js {
      @include sr-only();
    }
  }

  // Only show the main content on the mTicket app's view
  &.mticket {
    .announcement-container,
    .header,
    .l-footer,
    .smartbanner {
      display: none;
    }

    // Remove space reserved for the footer
    .body-wrapper {
      margin-bottom: 0;
      padding-bottom: 0;
    }
  }

  // Display a label when viewing CMS content previews
  &.cms-preview {
    &::after {
      @include h2();
      background-color: $alert-color;
      border: 1px solid darken($color: $alert-color, $amount: 10);
      border-radius: $border-radius;
      bottom: 1em;
      box-shadow: 0 0 .5em 0 transparentize($color: $black, $amount: .75);
      content: 'PREVIEW MODE';
      display: block;
      line-height: 1;
      margin: 0;
      padding: .5em;
      pointer-events: none;
      position: fixed;
      right: 1em;
      z-index: 100;
    }
  }
}

h1 {
  @include h1();
}

h2 {
  @include h2();
}

h3 {
  @include h3();
}

h4 {
  @include h4();
}

h5 {
  @include h5();
}

h6 {
  @include h6();
}

// undo styles in app.html.eex
.icon {
  height: initial;
  width: initial;
}

.icon-circle {
  fill: initial;
  stroke: initial;
  stroke-width: initial;
}

.pre-container-wrapper,
.post-container-wrapper,
.page-container {
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 0;
}

.station__header,
.schedule__header,
.pre-container-wrapper,
.post-container-wrapper {
  max-width: 100%;
  width: 100%;
}

.post-container-wrapper {
  padding-bottom: $base-spacing;
  padding-top: $base-spacing;
}

.page-container {
  align-self: center;
  margin: 0 auto;
  padding: 0 0 $base-spacing * 2;
}

.page-narrow {
  @include media-breakpoint-up(md) {
    @include make-col-span(8);
    margin-left: auto;
    margin-right: auto;
  }
}

.main-container {
  background-color: $white;
  padding-bottom: $base-spacing;
}

@include media-breakpoint-down(sm) {
  // hide SM down, but remain visible to screen readers
  .focusable-sm-down {
    @include sr-only();
    @include sr-only-focusable();
  }
}

%top-bar {
  padding-bottom: $space-8;
  padding-top: $space-8;
}

.breadcrumb-container {
  @extend %top-bar;
  background-color: $gray-bordered-background;
  border: solid 1px $gray-lightest;
  color: $gray-dark;

  i {
    color: $gray-light;
    padding: 0 .5em;
  }
}

.announcement-container {
  background-color: $gray-bordered-background;
  border: solid 1px $gray-lightest;
  color: $gray-dark;
  padding-bottom: $base-spacing;
  padding-top: $base-spacing;

  @include media-breakpoint-down(sm) {
    padding-bottom: $base-spacing-sm;
    padding-top: $base-spacing-sm;
  }
}

.alert-announcement-container {
  @extend %top-bar;
  background-color: $alert-color-lighter;
  color: $gray-dark;
  font-size: $font-size-base;
  padding-bottom: $space-16;
  padding-top: $space-16;

  a {
    @include hover-focus-active {
      text-decoration: none;
    }
  }
}

.alert-announcement-header {
  color: $gray-dark;

  @include hover-focus-active {
    color: $gray-dark;
  }

  .alert-item-icon {
    margin-top: 0;
  }
}

.alert-announcement-message {
  float: left;
  width: 90%;

  @include media-breakpoint-only(md) {
    width: 80%;
  }

  @include media-breakpoint-down(sm) {
    width: 70%;
  }
}

// To be removed once the smart banner is disabled
div {
  &.smartbanner {
    top: -80px;
  }
}

.d-inline {
  display: inline;
}

// Images, YouTube, iframes, other media (figure + figcaption)
.c-media {
  border-color: transparent;
  clear: both;
  line-height: 1;
  margin: $base-spacing / 2 auto $base-spacing * 1.5;
  padding: 0;
}

.c-media__media-element {

  // The diagonal line pattern takes up the
  // background space of an image/iframe, and
  // is exposed in the add-on space that the
  // padding-left-or-right provides (depending
  // on float conditions) in combination with
  // the alternate "content-box" box-model

  background-image: $gray-stripe-pattern;
  box-sizing: content-box;
  display: block;
  margin: 0;
  padding: 0;
}

.c-media__caption {
  border-bottom: $border;
  font-size: $font-size-sm;
  line-height: 1.3;
  padding: $space-12 0;
}

.c-media--size-full {
  @include media-breakpoint-up(xxl) {

    @include make-col-span(8);
    @include make-col-offset(2);

    // 8/12 is the same as 2/3 (thirds), which brings us
    // back to our gutter discrepancy issue (see below).
    // Need to reconcile this to align to bootstrap grid.
    // Padding reduces the figure container to fit grid.

    padding-left: 1% * (1 / 3);
    padding-right: 1% * (1 / 3);
  }
}

.c-media--size-half {
  @include media-breakpoint-up(sm) {
    @include make-col-span(6);
  }
}

.c-media--size-half,
.c-media--size-third {
  @include media-breakpoint-up(sm) {

    // Since we do not have a row/container for our
    // column-based figures (no inherent gutters), we must
    // offset and equalize the figure to get it aligned and
    // fitted within the nominal bootstrap grid system.
    //
    // padding: the inner-column padding for stripes; one-full gutter-width
    // border:  the 'center' minus one-half gutter space
    // margin:  the inner-column gap for the text side + the other half of the gutter

    &.c-media--align-left {
      border-right-width: $base-spacing * (1 / 2);
      margin-right: $base-spacing * (3 / 2);
    }

    &.c-media--align-right {
      border-left-width: $base-spacing * (1 / 2);
      margin-left: $base-spacing * (3 / 2);
    }
  }
}

.c-media--size-third {
  @include media-breakpoint-up(sm) {
    @include make-col-span(6);
  }

  @include media-breakpoint-up(lg) {

    @include make-col-span(4);

    // The offset/fitting for "size-third" figures is
    // based on thirds, rather than halves (above).

    &.c-media--align-left {
      border-right-width: $base-spacing * (2 / 3);
      margin-right: $base-spacing * (4 / 3);
    }

    &.c-media--align-right {
      border-left-width: $base-spacing * (2 / 3);
      margin-left: $base-spacing * (4 / 3);
    }
  }
}

.c-media--align-left {
  @include media-breakpoint-up(sm) {
    border-right-style: solid;
    float: left;
    padding-right: $base-spacing;

    .c-media__media-element {
      padding-right: $base-spacing;
    }
  }
}

.c-media--align-right {
  @include media-breakpoint-up(sm) {
    border-left-style: solid;
    float: right;
    padding-left: $base-spacing;

    .c-media__media-element {
      margin-left: -$base-spacing;
      padding-left: $base-spacing;
    }
  }
}

.error-container {
  background-color: $form-error-message;
  margin-top: .5em;

  span {
    display: inline-block;
    margin: .5em;

    // NB this should use the single-colon syntax (i.e. :before); it's
    // older CSS2 syntax but FA uses it and due to the way SCSS @extend
    // works we need to match selector syntax.
    // scss-lint:disable PseudoElement

    &:before {
      @include fa-icon();
      content: $fa-var-exclamation-circle;
      margin-right: .25em;
    }
  }
}
