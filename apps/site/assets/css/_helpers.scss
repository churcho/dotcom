.no-overflow {
  word-break: break-word;
  word-wrap: break-word;
}

.disabled {
  opacity: .4;
  pointer-events: none;
}

@mixin truncate($margin-right: 1em, $fallback-width: 95%) {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  // scss-lint:disable DuplicateProperty
  width: $fallback-width; // fallback for browsers which don't support calc()
  width: calc(100% - #{$margin-right});
}

@mixin no-wrap($display: inline-block) {
  display: $display;
  text-decoration: inherit;
  white-space: nowrap;
}

.no-wrap {
  @include no-wrap();
}

.inline-block {
  display: inline-block;
}

.strikethrough {
  color: $gray-lighter;
  text-decoration: line-through;
}

.callout {
  background-color: $gray-bordered-background;
  border: $border;
  border-radius: $border-radius;
  margin-bottom: $base-spacing;
  padding: $space-12;
  margin: $space-12 0;

  &:empty {
    display: none;
  }
}

.callout-small {
  padding-bottom: $base-spacing-sm;
  padding-top: $base-spacing-sm;
}

.has-element-overlay:hover .element-overlay {
  display: block;
}

.element-overlay {
  background-color: $gray-image-overlay;
  bottom: 0;
  display: none;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

.element-overlay-icon {
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
}

.sticky-top {
  position: sticky;
  top: 0;
  z-index: $zindex-sticky;
}

.stripe-bar {
  background: $gray-stripe-pattern repeat;
  min-height: 25px;
}

@mixin column-lines($breakpoint) {

  $gap: $grid-gutter-width / 2;
  margin: $gap #{-$gap};

  & > [class*="col-#{$breakpoint}-"] {
    border-left: $border;
    left: $gap;
    padding: 0 ($gap * 2) 0 $gap;

    > *:first-child {
      margin-top: 0;
      padding-top: 0;
    }

    > *:last-child {
      margin-bottom: 0;
      padding-bottom: 0;
    }
  }
}
