<div class="stop-filters schedule-filter-row callout">
  <div class="row">
    <div class="col-sm-6">
      <% origin = if @origin, do: @origin.id, else: nil %>
      <%= SiteWeb.PartialView.render "_stop_selector.html",
        conn: @conn,
        query_key: "origin",
        selected: origin,
        all_stops: @all_stops,
        key_stops: [],
        label_text: "Departing from:",
        placeholder_text: "origin",
        route: @route,
        disabled_values: @excluded_origin_stops |> Enum.map(&{&1, "last #{@route |> Routes.Route.direction_name(@direction_id) |> String.downcase} stop"}),
        clearable?: false,
        exclude: ["trip"]
      %>
    </div>
    <%
      selector_class = if @destination, do: "", else: " hidden-xs-down"
      toggle_class = if @destination, do: " hidden-xs-up", else: " hidden-sm-up"
    %>
    <%= if @origin && !assigns[:hide_destination_selector?] do %>
      <div class="col-sm-6<%= selector_class %>">
        <% destination = if @destination, do: @destination.id, else: nil %>
        <%= SiteWeb.PartialView.render "_stop_selector.html",
            conn: @conn,
            query_key: "destination",
            selected: destination,
            all_stops: @all_stops,
            key_stops: [],
            label_text: "Arriving at: (optional)",
            placeholder_text: "destination",
            route: @route,
            exclude: ["trip"],
            disabled_values: [{@origin.id, "departure stop"} | Enum.map(@excluded_destination_stops, &({&1, "not on branch"}))],
            # filter out non-destination stops because they're on a different branch
            clearable?: !assigns[:preselected_destination?]
        %>
      </div>
      <div class="schedule-destination-select-toggle col-sm-6<%= toggle_class %>">
        <a href="#" data-select-modal="destination"><%= fa "plus-circle" %> Add a destination (optional)</a>
      </div>
    <% end %>
  </div>
</div>
